import streamlit as st
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle, Image
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib import colors
from io import BytesIO
from datetime import datetime

# Function to create the PDF
def create_pdf(candidate_name, years_experience, recent_position, key_skills, notes):
    buffer = BytesIO()
    doc = SimpleDocTemplate(buffer)
    styles = getSampleStyleSheet()

    # Custom brand style for headers
    header_style = styles["h1"]
    header_style.textColor = colors.green

    # Elements for the PDF
    elements = []

    # Add logo
    logo_path = "STIRLING-TRANSPARENT.jpg"  # Ensure the logo is in the same directory
    elements.append(Image(logo_path, width=150, height=50))
    elements.append(Spacer(1, 12))

    # Title Section
    elements.append(Paragraph(f"Candidate Overview: {candidate_name}", header_style))
    elements.append(Spacer(1, 12))

    # Key Details Section
    elements.append(Paragraph(f"<b>Years of Experience:</b> {years_experience}", styles["Normal"]))
    elements.append(Paragraph(f"<b>Most Recent Position:</b> {recent_position}", styles["Normal"]))
    elements.append(Spacer(1, 12))

    # Key Skills Section
    if key_skills:
        elements.append(Paragraph("<b>Key Skills:</b>", styles["h2"]))
        skills_list = [skill.strip() for skill in key_skills.split(",")]
        for skill in skills_list:
            elements.append(Paragraph(f"- {skill}", styles["Normal"]))
        elements.append(Spacer(1, 12))

    # Additional Notes Section
    if notes:
        elements.append(Paragraph("<b>Additional Notes:</b>", styles["h2"]))
        elements.append(Paragraph(notes, styles["Normal"]))
        elements.append(Spacer(1, 12))

    # Footer with date and branding
    current_date = datetime.now().strftime("%A, %d %B %Y")
    footer_text = f"Generated by Stirling Q&R Recruitment | {current_date}"
    footer_style = styles["Normal"]
    footer_style.textColor = colors.black
    footer_style.fontSize = 8

    elements.append(Spacer(1, 24))
    elements.append(Paragraph(footer_text, footer_style))

    # Build the PDF
    doc.build(elements)
    buffer.seek(0)
    
    return buffer

# Streamlit app
def main():
    st.set_page_config(page_title="Candidate One-Pager Generator", page_icon=":briefcase:")

    # Custom branding: Title and logo
    st.image("STIRLING-TRANSPARENT.jpg", width=200)
    st.title("Candidate One-Pager Generator")
    
    # Input fields for candidate details
    candidate_name = st.text_input("Candidate Name")
    years_experience = st.number_input("Years of Experience", min_value=0, step=1)
    recent_position = st.text_input("Most Recent Position")
    key_skills = st.text_area("Key Skills (comma-separated)")
    notes = st.text_area("Additional Notes")

    if st.button("Generate PDF"):
        if candidate_name and recent_position:
            pdf_buffer = create_pdf(candidate_name, years_experience, recent_position, key_skills, notes)

            # Provide download link for the PDF
            st.download_button(
                label="Download Candidate One-Pager PDF",
                data=pdf_buffer,
                file_name=f"{candidate_name.replace(' ', '_')}_one_pager.pdf",
                mime="application/pdf"
            )
        else:
            st.error("Please fill in all required fields.")

if __name__ == "__main__":
    main()
