# Import necessary libraries
import streamlit as st
from docx import Document
from pptx import Presentation

# Function to extract text from a Word document
def extract_text_from_docx(file):
    doc = Document(file)
    return "\n".join([para.text for para in doc.paragraphs])

# Function to create a presentation
def create_presentation(candidate_name, years_experience, recent_position, key_skills, notes):
    prs = Presentation()

    # Title slide
    slide = prs.slides.add_slide(prs.slide_layouts[0])
    slide.shapes.title.text = f"Candidate Overview: {candidate_name}"
    slide.placeholders[1].text = "Generated by Streamlit App"

    # Experience slide
    slide = prs.slides.add_slide(prs.slide_layouts[1])
    slide.shapes.title.text = "Experience"
    content = slide.placeholders[1]
    content.text = f"Years of Experience: {years_experience}\nMost Recent Position: {recent_position}"

    # Skills slide
    slide = prs.slides.add_slide(prs.slide_layouts[1])
    slide.shapes.title.text = "Key Skills"
    content = slide.placeholders[1]
    content.text = "\n".join(key_skills)

    # Notes slide
    slide = prs.slides.add_slide(prs.slide_layouts[1])
    slide.shapes.title.text = "Additional Notes"
    content = slide.placeholders[1]
    content.text = notes

    return prs

# Streamlit app
def main():
    st.title("Candidate Presentation Builder")

    # Upload CV
    uploaded_file = st.file_uploader("Upload Candidate CV (Word Document)", type=["docx"])

    # Input fields
    candidate_name = st.text_input("Candidate Name")
    years_experience = st.number_input("Years of Experience", min_value=0, step=1)
    recent_position = st.text_input("Most Recent Position")
    key_skills = st.text_area("Key Skills (comma-separated)")
    notes = st.text_area("Additional Notes")

    if st.button("Generate Presentation"):
        if uploaded_file and candidate_name and recent_position:
            # Extract text from CV
            cv_text = extract_text_from_docx(uploaded_file)

            # Process key skills
            skills_list = [skill.strip() for skill in key_skills.split(",")]

            # Create presentation
            presentation = create_presentation(candidate_name, years_experience, recent_position, skills_list, notes)

            # Save presentation
            presentation_file = f"{candidate_name.replace(' ', '_')}_presentation.pptx"
            presentation.save(presentation_file)

            # Provide download link
            with open(presentation_file, "rb") as file:
                st.download_button(
                    label="Download Presentation",
                    data=file,
                    file_name=presentation_file,
                    mime="application/vnd.openxmlformats-officedocument.presentationml.presentation"
                )
        else:
            st.error("Please fill in all required fields and upload a CV.")

if __name__ == "__main__":
    main()
